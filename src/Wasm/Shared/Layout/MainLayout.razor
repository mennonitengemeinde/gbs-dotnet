@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider

<GbsThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout Class="tw-min-h-screen tw-max-h-screen tw-flex">
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(e => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">GBS</MudText>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <MudButton StartIcon="@Icons.Material.Filled.Logout" OnClick="Logout" Color="Color.Inherit">
                    Logout
                </MudButton>
            </Authorized>
            <NotAuthorized>
                <MudButton StartIcon="@Icons.Material.Filled.Login" Href="login" Color="Color.Inherit">
                    Login
                </MudButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="tw-flex-1 tw-flex tw-pb-4 tw-overflow-x-auto">
        <InfinitLinearProgress />
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="tw-flex-1 tw-flex tw-flex-col">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("");
    }

}