<MudCard Class="tw-relative">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h5">@(IsEdit ? $"Update {Label}" : $"Create {Label}")</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudOverlay Visible="IsLoading" DarkBackground="true" Absolute="true">
            <MudProgressCircular Color="Color.Primary" Indeterminate="true"/>
        </MudOverlay>
        @if (ValidationErrors != null)
        {
            @foreach (var err in ValidationErrors)
            {
                <MudAlert Severity="Severity.Error" Class="tw-mt-4">@err</MudAlert>
                @* <MudText Typo="Typo.body2" Color="Color.Error">@err</MudText> *@
            }
        }
        <MudFocusTrap DefaultFocus="DefaultFocus.FirstChild" Class="tw-space-y-4">
            @ChildContent
        </MudFocusTrap>
    </MudCardContent>
    <MudCardActions Class="tw-flex tw-justify-end tw-space-x-2">
        <MudButton Variant="Variant.Text" Href="@ReturnUrl">Cancel</MudButton>
        <MudButton ButtonType="ButtonType.Submit"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   StartIcon="@(IsProcessing ? null : Icons.Material.Filled.Save)"
                   Disabled="@IsProcessing">
            @if (IsProcessing)
            {
                <MudProgressCircular Class="-tw-ml-1 tw-mr-3" Size="Size.Small" Indeterminate="true"/>
            }
            <MudText>Save</MudText>
        </MudButton>
    </MudCardActions>
</MudCard>

@code {

    [Parameter]
    public bool IsEdit { get; set; }

    [Parameter, EditorRequired]
    public bool IsProcessing { get; set; }

    [Parameter, EditorRequired]
    public bool IsLoading { get; set; }

    [Parameter, EditorRequired]
    public string Label { get; set; } = "Something";

    [Parameter, EditorRequired]
    public string ReturnUrl { get; set; } = string.Empty;
    
    [Parameter, EditorRequired]
    public string[]? ValidationErrors { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

}