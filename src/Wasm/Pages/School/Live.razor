@page "/school/{Id:int}/live"
@attribute [Authorize(Policy = Policies.RequireAdminsSoundAndTeachers)]
@using Gbs.Wasm.Pages.School.Components

@inject IStreamStore StreamStore
@inject NavigationManager NavigationManager

<PageTitle>Live - GBS</PageTitle>

@if (LiveStream != null)
{
    <LiveVideoPlayer Url="@LiveStream.Url" Title="@LiveStream.Title" GenerationName="@LiveStream.GenerationName" />
}

@code {

    [CascadingParameter]
    CascadingUiState UiState { get; set; } = null!;
    
    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public StreamDto? LiveStream { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var liveStream = await StreamStore.GetOnlyLiveById(Id);
        if (liveStream == null)
        {
            NavigationManager.NavigateTo("school");
        }
        else
        {
            LiveStream = liveStream;
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        UiState.IsPageLoading = StreamStore.IsLoading;
    }

}