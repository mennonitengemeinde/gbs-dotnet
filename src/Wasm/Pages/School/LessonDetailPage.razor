@page "/school/lessons/{id:int}"
@using Gbs.Wasm.Pages.School.Components
@attribute [Authorize(Policy = Policies.RequireAdminsSoundAndTeachers)]

@inject NavigationManager NavigationManager

<PageTitle>Lesson - GBS</PageTitle>

@if (Lesson != null)
{
    <LiveVideoPlayer Url="@Lesson.VideoUrl" Title="@Lesson.Name" GenerationName="@Lesson.SubjectName" />
    
    <div class="tw-flex tw-justify-end tw-py-4">
        <MudButton Variant="Variant.Filled"
                   Color="Color.Default"
                   EndIcon="@Icons.Material.Outlined.Circle">
            Complete
        </MudButton>
    </div>
}

@code {

    [CascadingParameter]
    LessonState LessonState { get; set; } = null!;

    [CascadingParameter]
    UiState UiState { get; set; } = null!;

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public LessonResponse? Lesson { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var lesson = await LessonState.GetById(Id);
        if (lesson == null)
        {
            NavigationManager.NavigateTo("school");
        }
        else
        {
            Lesson = lesson;
        }
    }
    
    void HandleCompleteLesson(bool complete)
    {
        
        UiState.ShowSnackbar("Lesson completed", Severity.Success);
    }

}