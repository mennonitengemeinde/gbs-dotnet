@page "/admin/teachers"
@attribute [Authorize(Policy = Policies.RequireAdminsAndSound)]

<PageTitle>Teachers - GBS</PageTitle>

<div class="tw-py-4 tw-space-y-4">
    <MudText Typo="Typo.h4">Teachers</MudText>
    <MudButton StartIcon="@Icons.Filled.Add" Color="Color.Primary" Variant="Variant.Filled" Href="/admin/teachers/create">
        New
    </MudButton>
</div>

<MudTable Items="@TeacherState.Data" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@TeacherState.IsLoading" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd Class="tw-text-end">
            <MudIconButton Icon="@Icons.Material.Filled.Edit"
                           Size="Size.Small"
                           Href="@($"admin/teachers/{context.Id}/edit")" />
        </MudTd>
    </RowTemplate>
</MudTable>

@code {

    [CascadingParameter]
    public TeacherState TeacherState { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        await TeacherState.Fetch();
    }

}