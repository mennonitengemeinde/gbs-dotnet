@inject NavigationManager NavigationManager
@inject IUiService UiService

<EditForm Model="_model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid Justify="Justify.Center" Class="tw-pt-8">
        <MudItem xs="12" sm="8" md="5">
            <MatFormCard Label="Generation"
                         IsLoading="@GenerationState.IsLoading"
                         IsProcessing="@_isProcessing"
                         ValidationErrors="@_errors"
                         ReturnUrl="/admin/generations">
                <MudTextField Label="Name"
                              @bind-Value="_model.Name"
                              For="() => _model.Name" />
            </MatFormCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {

    [CascadingParameter]
    public GenerationState GenerationState { get; set; } = null!;

    CreateGenerationRequest _model = new();
    bool _isProcessing;
    string[]? _errors;


    async Task HandleValidSubmit()
    {
        _isProcessing = true;
        await GenerationState.Add(_model);

        if (GenerationState.HasError)
        {
            UiService.ShowErrorAlert(GenerationState.ErrorMessage);
            _errors = GenerationState.Errors;
            _isProcessing = false;
            GenerationState.ClearErrors();
        }
        else
        {
            _isProcessing = false;
            UiService.ShowSuccessAlert("Generation added successfully");
            NavigationManager.NavigateTo("admin/generations");
        }
    }

}