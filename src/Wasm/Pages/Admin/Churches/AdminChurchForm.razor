@page "/admin/churches/create"
@page "/admin/churches/{Id:int}/edit"
@attribute [Authorize(Policy = Policies.RequireAdmins)]

@inject NavigationManager NavigationManager
@inject IChurchStore ChurchStore
@inject IUiService UiService

<PageTitle>Churches Form - GBS</PageTitle>

<EditForm Model="_model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator/>
    <MudGrid Justify="Justify.Center" Class="tw-pt-8">
        <MudItem xs="12" sm="8" md="5">
            <MatFormCard Label="Church"
                         IsEdit="@_isEdit"
                         IsLoading="@ChurchStore.IsLoading"
                         IsProcessing="@_isProcessing"
                         ReturnUrl="/admin/churches">
                <MudTextField Label="Name"
                              @bind-Data="_model.Name"
                              Required="true"
                              For="() => _model.Name"/>
                <MudTextField Label="Address"
                              @bind-Data="_model.Address"
                              For="() => _model.Address"/>
                <MudTextField Label="City"
                              @bind-Data="_model.City"
                              For="() => _model.City"/>
                <MudTextField Label="State"
                              @bind-Data="_model.State"
                              For="() => _model.State"/>
                <MudTextField Label="Country"
                              @bind-Data="_model.Country"
                              Required="true"
                              For="() => _model.Country"/>
                <MudTextField Label="PostalCode"
                              @bind-Data="_model.PostalCode"
                              For="() => _model.PostalCode"/>
            </MatFormCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    ChurchCreateDto _model = new ();
    bool _isProcessing;
    bool _isEdit;

    [Parameter]
    public int? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            _isEdit = true;
            var church = await ChurchStore.GetById(Id.Value);
            if (church != null)
            {
                _model.Name = church.Name;
                _model.Address = church.Address;
                _model.City = church.City;
                _model.State = church.State;
                _model.PostalCode = church.PostalCode;
                _model.Country = church.Country;
            }
        }
    }

    async Task HandleValidSubmit()
    {
        _isProcessing = true;

        if (_isEdit)
        {
            await ChurchStore.Update(Id!.Value, _model);
        }
        else
        {
            await ChurchStore.Add(_model);
        }

        if (!ChurchStore.HasError)
        {
            _isProcessing = false;
            UiService.ShowSuccessAlert(_isEdit ? "Church updated successfully" : "Church added successfully");
            NavigationManager.NavigateTo("admin/churches");
        }
        else
        {
            _isProcessing = false;
            ChurchStore.ClearErrors();
        }
    }

}