@page "/login"
@layout AuthLayout
@using Gbs.Wasm.Pages.Auth.Components
@using Gbs.Wasm.Services.Api.AuthService

@inject IAuthService AuthService
@inject IUiService UiService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorage

<PageTitle>Login - GBS</PageTitle>

<EditForm Model="_loginDto" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid Justify="Justify.Center" Class="tw-pt-12">
        <MudItem xs="12" sm="8" md="5" lg="4">
            <MudCard Class="tw-relative tw-p-4">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h4">Login</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <AuthTabNav/>
                    
                    <MudFocusTrap DefaultFocus="DefaultFocus.FirstChild" Class="tw-space-y-2">
                        <MudTextField Label="Email"
                                      InputType="InputType.Email"
                                      @bind-Value="_loginDto.Email"
                                      For="() => _loginDto.Email" />
                        <MudTextField Label="Password"
                                      InputType="InputType.Password"
                                      @bind-Value="_loginDto.Password"
                                      For="() => _loginDto.Password" />
                    </MudFocusTrap>
                </MudCardContent>
                <MudCardActions Class="tw-flex tw-justify-end tw-space-x-2">
                    <MudButton Variant="Variant.Text" Href="/">Cancel</MudButton>
                    <MudButton ButtonType="ButtonType.Submit"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               StartIcon="@(_isProcessing ? null : Icons.Material.Filled.Login)"
                               Disabled="@(_isProcessing)">
                        @if (_isProcessing)
                        {
                            <MudProgressCircular Class="-tw-ml-1 tw-mr-3" Size="Size.Small" Indeterminate="true"/>
                        }
                        <MudText>Login</MudText>
                    </MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>

</EditForm>

@code {
    readonly LoginDto _loginDto = new LoginDto();
    bool _isProcessing;

    private async Task HandleValidSubmit()
    {
        _isProcessing = true;
        var result = await AuthService.Login(_loginDto);
        if (result.Success == false)
        {
            await UiService.ShowErrorAlert(result.Message, result.StatusCode);
            _isProcessing = false;
            return;
        }
        await LocalStorage.SetItemAsync("authToken", result.Data);
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        _isProcessing = false;
        NavigationManager.NavigateTo("school");
    }

}