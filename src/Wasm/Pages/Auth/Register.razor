@page "/register"
@using Gbs.Wasm.Pages.Auth.Components
@using Gbs.Shared.Identity
@layout AuthLayout

@inject IUserStore UserStore
@inject NavigationManager NavigationManager

<PageTitle>Register - GBS</PageTitle>

<EditForm Model="_registerDto" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <MudGrid Justify="Justify.Center" Class="tw-pt-12">
        <MudItem xs="12" sm="8" md="5" lg="4">
            <MudCard Class="tw-relative tw-p-4">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h4">Login</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <AuthTabNav />

                    <MudFocusTrap DefaultFocus="DefaultFocus.FirstChild" Class="tw-space-y-2">
                        <MudTextField Label="First Name"
                                      @bind-Value="_registerDto.FirstName"
                                      For="() => _registerDto.FirstName" />
                        <MudTextField Label="Last Name"
                                      @bind-Value="_registerDto.LastName"
                                      For="() => _registerDto.LastName" />
                        <MudTextField Label="Email"
                                      InputType="InputType.Email"
                                      @bind-Value="_registerDto.Email"
                                      For="() => _registerDto.Email" />
                        <MudTextField Label="Password"
                                      InputType="InputType.Password"
                                      @bind-Value="_registerDto.Password"
                                      For="() => _registerDto.Password" />
                        <MudTextField Label="Confirm Password"
                                      InputType="InputType.Password"
                                      @bind-Value="_registerDto.ConfirmPassword"
                                      For="() => _registerDto.ConfirmPassword" />
                    </MudFocusTrap>
                </MudCardContent>
                <MudCardActions Class="tw-flex tw-justify-end tw-space-x-2">
                    <MudButton Variant="Variant.Text" Href="/">Cancel</MudButton>
                    <MudButton ButtonType="ButtonType.Submit"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               StartIcon="@(_isProcessing ? null : Icons.Material.Filled.HowToReg)"
                               Disabled="@(_isProcessing)">
                        @if (_isProcessing)
                        {
                            <MudProgressCircular Class="-tw-ml-1 tw-mr-3" Size="Size.Small" Indeterminate="true" />
                        }
                        <MudText>Register</MudText>
                    </MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    RegisterDto _registerDto = new();
    bool _isProcessing;

    async Task HandleRegistration()
    {
        _isProcessing = true;
        await UserStore.Add(_registerDto);
        if (!UserStore.HasError)
        {
            _isProcessing = false;
            NavigationManager.NavigateTo("login");
        }
        else
        {
            UserStore.ClearErrors();
            _isProcessing = false;
        }
    }

}