@using gbs.Client.Enums.Button
@if (Href != null)
{
    <NavLink Href="@Href" class="@GetClass()">
        @ChildContent
    </NavLink>
}
else
{
    <button type="@Type" class="@GetClass()" disabled="@IsLoading" @onclick="OnClick">
        @if (IsLoading)
        {
            <InfinitLoading Class="-ml-1 mr-3"/>
        }
        @ChildContent
    </button>
}

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    
    [Parameter]
    public BtnColor? Color { get; set; }
    
    [Parameter]
    public BtnShape? Shape { get; set; }

    [Parameter]
    public bool Outline { get; set; } = false;
    
    [Parameter]
    public bool IsLoading { get; set; } = false;
    
    [Parameter]
    public BtnSize Size { get; set; } = BtnSize.Medium;
    
    [Parameter]
    public string Type { get; set; } = "button";
    
    [Parameter]
    public string? Href { get; set; }
    
    [Parameter]
    public EventCallback OnClick { get; set; }
    
    private string GetClass()
    {
        var classes = new List<string>();
        classes.Add("btn");
        if (Color != null)
        {
            classes.Add(Color.ToDescriptionString());
        }
        if (Size != BtnSize.Medium)
        {
            classes.Add(Size.ToDescriptionString());
        }
        if (Shape != null)
        {
            classes.Add(Shape.ToDescriptionString());
        }
        if (Outline)
        {
            classes.Add("btn-outline");
        }
        return string.Join(" ", classes);
    }
}