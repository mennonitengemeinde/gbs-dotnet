@page "/admin/churches/create"
@page "/admin/churches/{Id:int}/edit"
@attribute [Authorize(Roles = $"{Roles.SuperAdmin}, {Roles.Admin}, {Roles.Teacher}")]
@inject NavigationManager NavigationManager
@inject IChurchService ChurchService
@inject IUiService UiService

<EditForm Model="_model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator/>
    <MudGrid Justify="Justify.Center" Class="tw-pt-8">
        <MudItem xs="12" sm="8" md="5">
            <MatFormCard Label="Church"
                         IsEdit="@_isEdit"
                         IsLoading="@_isLoading"
                         IsProcessing="@_isProcessing"
                         ReturnUrl="/admin/churches">
                <MudTextField Label="Name"
                              @bind-Value="_model.Name"
                              Required="true"
                              For="() => _model.Name"/>
                <MudTextField Label="Address"
                              @bind-Value="_model.Address"
                              For="() => _model.Address"/>
                <MudTextField Label="City"
                              @bind-Value="_model.City"
                              For="() => _model.City"/>
                <MudTextField Label="State"
                              @bind-Value="_model.State"
                              For="() => _model.State"/>
                <MudTextField Label="Country"
                              @bind-Value="_model.Country"
                              Required="true"
                              For="() => _model.Country"/>
                <MudTextField Label="PostalCode"
                              @bind-Value="_model.PostalCode"
                              For="() => _model.PostalCode"/>
            </MatFormCard>
        </MudItem>
    </MudGrid>
</EditForm>

@* <div class="flex justify-center pt-4"> *@
@*     <div class="card w-96 bg-base-200 shadow-lg"> *@
@*         <div class="card-body"> *@
@*             @if (_pageLoading) *@
@*             { *@
@*                 <div class="flex justify-center"> *@
@*                     <InfinitLoading Height="10" Width="10"/> *@
@*                 </div> *@
@*             } *@
@*             else *@
@*             { *@
@*                 <EditForm Model="_newChurch" OnValidSubmit="HandleValidSubmit"> *@
@*                     <DataAnnotationsValidator/> *@
@*                     <TextInput Id="name" *@
@*                                @ref="_nameInput" *@
@*                                Label="Name" *@
@*                                Required *@
@*                                @bind-Value="_newChurch.Name" *@
@*                                For="() => _newChurch.Name"/> *@
@*                     <TextInput Id="address" *@
@*                                Label="Address" *@
@*                                @bind-Value="_newChurch.Address" *@
@*                                For="() => _newChurch.Address!"/> *@
@*                     <TextInput Id="city" *@
@*                                Label="City" *@
@*                                @bind-Value="_newChurch.City" *@
@*                                For="() => _newChurch.City!"/> *@
@*                     <TextInput Id="state" *@
@*                                Label="State" *@
@*                                @bind-Value="_newChurch.State" *@
@*                                For="() => _newChurch.State!"/> *@
@*                     <TextInput Id="country" *@
@*                                Label="Country" *@
@*                                Required *@
@*                                @bind-Value="_newChurch.Country" *@
@*                                For="() => _newChurch.Country"/> *@
@*                     <TextInput Id="postalCode" *@
@*                                Label="PostalCode" *@
@*                                @bind-Value="_newChurch.PostalCode" *@
@*                                For="() => _newChurch.PostalCode!"/> *@
@*                     <div class="flex justify-end pt-4 space-x-2"> *@
@*                         <Button Href="admin/churches">Cancel</Button> *@
@*                         <Button Type="submit" Color="BtnColor.Success" IsLoading="_isLoading">Save</Button> *@
@*                     </div> *@
@*                 </EditForm> *@
@*             } *@
@*         </div> *@
@*     </div> *@
@* </div> *@


@code {
    ChurchCreateDto _model = new ChurchCreateDto();
    bool _isLoading;
    bool _isProcessing;
    bool _isEdit;

    [Parameter]
    public int? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            _isEdit = true;
            _isLoading = true;
            var church = await ChurchService.GetChurch(Id.Value);
            _model = new ChurchCreateDto
            {
                Name = church.Data.Name,
                Address = church.Data.Address,
                City = church.Data.City,
                State = church.Data.State,
                PostalCode = church.Data.PostalCode,
                Country = church.Data.Country
            };
            _isLoading = false;
        }
    }

    async Task HandleValidSubmit()
    {
        _isProcessing = true;

        var response = _isEdit
            ? await ChurchService.UpdateChurch(Id!.Value, _model)
            : await ChurchService.AddChurch(_model);

        if (response.Success)
        {
            _isProcessing = false;
            UiService.ShowSuccessAlert(_isEdit ? "Church updated successfully" : "Church added successfully");
            NavigationManager.NavigateTo("admin/churches");
        }
        else
        {
            _isProcessing = false;
            await UiService.ShowErrorAlert(response.Message, response.StatusCode);
        }
    }

}