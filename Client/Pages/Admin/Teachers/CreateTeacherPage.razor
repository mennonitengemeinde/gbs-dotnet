@page "/admin/teachers/create"
@using Microsoft.AspNetCore.Components
@inject NavigationManager NavigationManager
@inject ITeacherService TeacherService
@inject IUiService UiService

<H3>Create Teacher</H3>

<div class="flex justify-center pt-4">
    <div class="card w-96 bg-base-200 shadow-lg">
        <div class="card-body">
            <EditForm Model="_newTeacher" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator/>
                <TextInput Id="name"
                           @ref="_nameInput"
                           Label="Name"
                           @bind-Value="_newTeacher.Name"
                           For="() => _newTeacher.Name"/>
                <div class="flex justify-end pt-4 space-x-2">
                    <Button Href="admin/teachers">Cancel</Button>
                    <Button Type="submit" Color="BtnColor.Primary" IsLoading="_isLoading">Add</Button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    TeacherCreateDto _newTeacher = new TeacherCreateDto();
    bool _isLoading = false;
    TextInput _nameInput = null!;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _nameInput.FocusAsync();
        }
    }

    async Task HandleValidSubmit()
    {
        _isLoading = true;
        var response = await TeacherService.AddTeacher(_newTeacher);
        if (response.Success)
        {
            _isLoading = false;
            UiService.AddSuccessAlert("Teacher added successfully");
            NavigationManager.NavigateTo("admin/teachers");
        }
        else
        {
            _isLoading = false;
            UiService.AddErrorAlert(response.Message);
            await _nameInput.FocusAsync();
        }
    }
}