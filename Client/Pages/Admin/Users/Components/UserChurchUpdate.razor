@inject IUserService UserService
@inject IChurchService ChurchService

<div class="form-control w-full max-w-sm">
    <label class="label">
        <span class="label-text">Role</span>
    </label>
    <select @onchange="HandleChange" class="select select-bordered">
        @if (User.ChurchId == null)
        {
            <option selected value="" disabled>Select church</option>
        }
        @foreach (var church in Churches)
        {
            @if (church.Id == User.ChurchId)
            {
                <option selected value="@church.Id">@church.Name</option>
            }
            else
            {
                <option value="@church.Id">@church.Name</option>
            }
        }
    </select>
</div>

@code {
    readonly UserUpdateChurchDto _updateChurchDto = new UserUpdateChurchDto();
    
    [Parameter, EditorRequired]
    public UserDto User { get; set; } = null!;

    [Parameter, EditorRequired]
    public List<Church> Churches { get; set; } = new List<Church>();
    
    async Task HandleChange(ChangeEventArgs e)
    {
        if (e.Value == null)
        {
            _updateChurchDto.ChurchId = null;
        }
        else
        {
            _updateChurchDto.ChurchId = int.Parse(e.Value.ToString() ?? string.Empty);
        }
        await UserService.UpdateChurch(User.Id, _updateChurchDto);
    }
}