@page "/admin/users"
@using gbs.Client.Pages.Admin.Users.Components
@implements IDisposable
@attribute [Authorize(Roles = $"{Roles.SuperAdmin}, {Roles.Admin}")]
@inject IUserService UserService

<H3>Users</H3>

@if (_loading)
{
    <div class="flex justify-center pt-8">
        <InfinitLoading Height="10" Width="10"/>
    </div>
}
else
{
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8 pt-4">
        @foreach (var user in UserService.Users)
        {
            <UserCard @key="@user.Id" User="@user" />
        }
    </div>
}

@code {
    bool _loading;
    
    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        await UserService.GetUsers();
        _loading = false;
        UserService.UsersChanged += StateHasChanged;
    }

    public void Dispose()
    {
        UserService.UsersChanged -= StateHasChanged;
    }

}